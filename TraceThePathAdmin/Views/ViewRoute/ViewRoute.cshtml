@using System.Web
@using System.Web.Optimization
@model TraceThePathAdmin.Models.Point


@{
    ViewBag.Title = "ViewRoute";
    var viewDataPoints = ViewData["Points"] as TraceThePathAdmin.Models.Point;
    var viewDataPointsByAssetId = ViewData["PointsByAssetId"] as TraceThePathAdmin.Models.Point;
}


<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <title>Navigate and View Your route here</title>

    <link rel="stylesheet" href="~/Scripts/OpenLayers-2.13.1/theme/default/style.css" type="text/css">
    <link rel="stylesheet" href="~/Scripts/OpenLayers-2.13.1/examples/style.css" type="text/css">
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="~/Content/bootstrap.css" type="text/css">
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/OpenLayers-2.13.1/OpenLayers.js"></script>
    <script src="~/Scripts/require.js"></script>
</head>

<body>
    <!-- top navbar -->
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">View Route</a>
        </div>
        <div class="collapse navbar-collapse">
            <ul class="nav navbar-nav">
                <li class="active"><a href="../home">Home</a></li>
                <li><a href="#about">About</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </div><!--/.nav-collapse -->
    </div><!--/.navbar -->

    <div class="container">
        <!--<div class="row">-->
        <div class="row-offcanvas row-offcanvas-left">
            <!--left-->
            <!--1<div class="col-md-1" id="rightCol">-->
            <!--2<div class="col-xs-6 col-sm-3 sidebar-offcanvas" id="sidebar" role="navigation">-->
            <div id="sidebar" class="sidebar-offcanvas">
                <!--1<ul class="nav nav-stacked" id="sidebar" data-toggle="collapse">-->
                <!--2<ul class="nav">-->
                <div class="col-md-12">
                    <h4>Asset List</h4>
                    <ul class="nav nav-pills nav-stacked">
                        @foreach (var item in ViewData["AssetInfo"] as List<TraceThePathAdmin.Models.AssetInfo>)
                        {
                            <li id="assetListItemId"><a href="#sec0">@item.assetName-@item.assetid</a></li>
                        }
                    </ul>
                </div><!--/left-->
            </div>
            <!--right-->
            <!--<div class="col-md-9">-->
            <div class="col-xs-12 col-sm-9">
                <p>
                    <button type="button" class="btn btn-primary btn-xs" data-toggle="offcanvas"><i class="glyphicon glyphicon-chevron-left"></i></button>
                </p>
                <!--<div id="map" class="olMap" style='width: 1300px; height: 700px;'></div>-->
                <div>
                    @Html.Partial("GetLocationCoordinatesByAssetId");
                </div>


            </div><!--/right-->
        </div><!--/row-->
    </div><!--/container-->
    <script type="text/javascript">

    /* activate sidebar */
    $('#sidebar').affix({
        offset: {
            top: 235
        }
    });
    $('.navbar-toggle').on('click', function () {
        if (!$(this).siblings('.navbar-toggle').hasClass('collapsed')) {
            $(this).siblings('.navbar-toggle').click();
        }
    });
    /* activate scrollspy menu */
    var $body = $(document.body);
    var navHeight = $('.navbar').outerHeight(true) + 10;

    $body.scrollspy({
        target: '#leftCol',
        offset: navHeight
    });

    /* smooth scrolling sections */
    $('a[href*=#]:not([href=#])').click(function () {
        if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {
            var target = $(this.hash);
            target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
            if (target.length) {
                $('html,body').animate({
                    scrollTop: target.offset().top - 50
                }, 1000);
                return false;
            }
        }
    });

    $(function () {
        $('#collapseFour').collapse({
            toggle: false
        })
    });
    $(function () { $('#collapseTwo').collapse('show') });
    $(function () { $('#collapseThree').collapse('toggle') });
    $(function () { $('#collapseOne').collapse('hide') });

    $(document).ready(function () {
        $('[data-toggle=offcanvas]').click(function () {
            $('.row-offcanvas').toggleClass('active');
        });
        //LoadMap();
    })

    /*$(document).on('click', '#assetListItemId', function () {
        alert("hi");
        $.ajax({
            url: "http://sanjayjdm.apphb.com/api/getlocation?appKey=ttpapikey.asxc123nju89mno0&assetId=1",
            dataType: "json"
        }).success(function (data) {
        });
    });*/



    $(document).on('click', '#assetListItemId', function () {
        var assetSelected = $(this).text();
        var assetNameAndId = assetSelected.split('-', 2);
        var assetIdfromUI = assetNameAndId[1];
        alert(assetIdfromUI);
         jQuery.support.cors = true;
        $.ajax({
            url: 'http://sanjayjdm.apphb.com/api/getlocation',
            type: 'GET',
            datatype: "json",
            data: {appKey : 'ttpapikey.asxc123nju89mno0', assetId: assetIdfromUI},
            success: function (result) {
                alert("entering success after get location");
                alert(result);
                alert(JSON.stringify(result));
                
                var latlonjson = JSON.stringify(result);
                var latlonparse = JSON.parse(latlonjson);

                alert(latlonparse.lat);
            },
            error: function (x, y, z) {
                alert('error alert after get location');
            }
        });


    }


            );

    function WriteResponse(coordinates) {
        alert(coordinates);
    }


    function LoadMap() {
        //var map, vectors, controls, feature, data, controls;
        //logger.log(title + 'has been Activated', null, title, true);

        //logger.log('init1 view route entry');
        //map = new OpenLayers.Map('map');
        var osm = new OpenLayers.Layer.OSM("OpenLayers OSM");

        // allow testing of specific renderers via "?renderer=Canvas", etc
        var renderer = OpenLayers.Util.getParameters(window.location.href).renderer;
        renderer = (renderer) ? [renderer] : OpenLayers.Layer.Vector.prototype.renderers;

        vectors = new OpenLayers.Layer.Vector("Vector Layer", {
            renderers: renderer
        });


        // The overlay layer for our marker, with a simple diamond as symbol
        var overlay = new OpenLayers.Layer.Vector('Overlay', {
            styleMap: new OpenLayers.StyleMap({
                externalGraphic: "../../../tracethepathadmin/Content/images/marker.png",
                graphicWidth: 20, graphicHeight: 24, graphicYOffset: -24,
                title: '${tooltip}'
            })
        });



        var rDataLat = "@(viewDataPoints.lat)";
        var rDataLon = "@(viewDataPoints.lon)";
        var myLocation = new OpenLayers.Geometry.Point(rDataLon, rDataLat)
                .transform('EPSG:4326', 'EPSG:3857');

        // We add the marker with a tooltip text to the overlay
        overlay.addFeatures([
            new OpenLayers.Feature.Vector(myLocation, { tooltip: 'OpenLayers' })
        ]);

        // A popup with some information about our location
        var popup = new OpenLayers.Popup.FramedCloud("Popup",
            myLocation.getBounds().getCenterLonLat(), null,
            '<a target="_blank" href="http://openlayers.org/">We</a> ' +
            'could be here.<br>Or elsewhere.', null,
            true // <-- true if we want a close (X) button, false otherwise
        );

        // Finally we create the map
        map = new OpenLayers.Map({
            div: "map", projection: "EPSG:3857",
            layers: [new OpenLayers.Layer.OSM(), overlay]
            , center: myLocation.getBounds().getCenterLonLat(), zoom: 15
        });


        var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
        var toProjection = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
        var position = new OpenLayers.LonLat(rDataLon, rDataLat).transform(fromProjection, toProjection);

        map.setCenter(position, 15);
        // and add the popup to it.
        //map.addPopup(popup);

        map.addLayers([osm, vectors]);
        map.addControl(new OpenLayers.Control.LayerSwitcher());
        //map.addControl(new OpenLayers.Control.MousePosition());

        controls = {
            point: new OpenLayers.Control.DrawFeature(vectors,
                        OpenLayers.Handler.Point),
            line: new OpenLayers.Control.DrawFeature(vectors,
                        OpenLayers.Handler.Path),


        };

        for (var key in controls) {
            map.addControl(controls[key]);
        }




    }

    </script>
    <style>
        body, html, .row-offcanvas {
            height: 100%;
        }

        body {
            padding-top: 50px;
        }

        #sidebar {
            width: inherit;
            min-width: 220px;
            max-width: 220px;
            background-color: #f5f5f5;
            float: left;
            height: 100%;
            position: relative;
            overflow-y: auto;
            overflow-x: hidden;
        }

        #main {
            height: 100%;
            overflow: auto;
        }

        /*
         * off Canvas sidebar
         * --------------------------------------------------
         */
        @@media screen and (max-width: 9000px) {
            .row-offcanvas {
                position: relative;
                -webkit-transition: all 0.25s ease-out;
                -moz-transition: all 0.25s ease-out;
                transition: all 0.25s ease-out;
                width: calc(100% + 220px);
            }

            .row-offcanvas-left {
                left: -220px;
            }

                .row-offcanvas-left.active {
                    left: 0;
                }

            .sidebar-offcanvas {
                position: absolute;
                top: 0;
            }
        }


        html, body, #map {
            margin: 0;
            width: 100%;
            height: 100%;
        }
    </style>
</body>
