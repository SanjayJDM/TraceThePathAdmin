@using System.Web
@using System.Web.Optimization
@model TraceThePathAdmin.Models.Point


@{
    ViewBag.Title = "GetLocationCoordinatesByAssetId";
    var viewDataPointsByAssetId = ViewData["PointsByAssetId"] as TraceThePathAdmin.Models.Point;
}

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <title></title>

    <link rel="stylesheet" href="~/Scripts/OpenLayers-2.13.1/theme/default/style.css" type="text/css">
    <link rel="stylesheet" href="~/Scripts/OpenLayers-2.13.1/examples/style.css" type="text/css">
    <link rel="stylesheet" href="../../../tracethepathadmin/Content/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="../../../tracethepathadmin/Content/bootstrap.css" type="text/css">
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/OpenLayers-2.13.1/OpenLayers.js"></script>
    <script src="~/Scripts/require.js"></script>
</head>

<div class="col-xs-12 col-sm-9">
    
    <div id="map" class="olMap" style='width: 1300px; height: 700px;'></div>

</div>
<script type="text/javascript">

    $(document).ready(function () {
            LoadMapWithAssetId();
    })


    function LoadMapWithAssetId() {
        alert("entering load map in getloccoordinatebyassetid");
        var map, vectors, controls, feature, data, controls;
        //logger.log(title + 'has been Activated', null, title, true);

        //logger.log('init1 view route entry');
        //map = new OpenLayers.Map('map');
        var osm = new OpenLayers.Layer.OSM("OpenLayers OSM");

        // allow testing of specific renderers via "?renderer=Canvas", etc
        var renderer = OpenLayers.Util.getParameters(window.location.href).renderer;
        renderer = (renderer) ? [renderer] : OpenLayers.Layer.Vector.prototype.renderers;

        vectors = new OpenLayers.Layer.Vector("Vector Layer", {
            renderers: renderer
        });


        // The overlay layer for our marker, with a simple diamond as symbol
        var overlay = new OpenLayers.Layer.Vector('Overlay', {
            styleMap: new OpenLayers.StyleMap({
                externalGraphic: "../../../tracethepathadmin/Content/images/marker.png",
                graphicWidth: 20, graphicHeight: 24, graphicYOffset: -24,
                title: '${tooltip}'
            })
        });

      
        var rDataLat = "12.971599";
        var rDataLon = "77.594563";

        var myLocation = new OpenLayers.Geometry.Point(rDataLon, rDataLat)
                .transform('EPSG:4326', 'EPSG:3857');

        // We add the marker with a tooltip text to the overlay
        overlay.addFeatures([
            new OpenLayers.Feature.Vector(myLocation, { tooltip: 'OpenLayers' })
        ]);

        // A popup with some information about our location
        var popup = new OpenLayers.Popup.FramedCloud("Popup",
            myLocation.getBounds().getCenterLonLat(), null,
            '<a target="_blank" href="http://openlayers.org/">We</a> ' +
            'could be here.<br>Or elsewhere.', null,
            true // <-- true if we want a close (X) button, false otherwise
        );

        // Finally we create the map
        map = new OpenLayers.Map({
            div: "map", projection: "EPSG:3857",
            layers: [new OpenLayers.Layer.OSM(), overlay]
            , center: myLocation.getBounds().getCenterLonLat(), zoom: 15
        });


        var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
        var toProjection = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
        var position = new OpenLayers.LonLat(rDataLon, rDataLat).transform(fromProjection, toProjection);

        map.setCenter(position, 15);
        // and add the popup to it.
        //map.addPopup(popup);

        map.addLayers([osm, vectors]);
        map.addControl(new OpenLayers.Control.LayerSwitcher());
        //map.addControl(new OpenLayers.Control.MousePosition());

        controls = {
            point: new OpenLayers.Control.DrawFeature(vectors,
                        OpenLayers.Handler.Point),
            line: new OpenLayers.Control.DrawFeature(vectors,
                        OpenLayers.Handler.Path),


        };

        for (var key in controls) {
            map.addControl(controls[key]);
        }




    }


</script>
